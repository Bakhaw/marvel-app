"use client";

import { useEffect, useState } from "react";
import { useParams } from "next/navigation";

import { useCharacter } from "@/app/hooks/useCharacter";
import {
  chat,
  formatMarvelCharacterToUser,
  formatPostCard,
  formatProfileCard,
} from "@/app/lib";
import { MarvelCharacter, Post, User } from "@/app/types";

import PostCard from "@/app/components/PostCard";
import ProfileCard from "@/app/components/ProfileCard";

function Page() {
  const { id: userId } = useParams();
  const [user, setUser] = useState<User | null>(null);
  const [posts, setPosts] = useState<Post[] | null>(null);

  async function getPosts(user: User) {
    const prompt = `Ã‰cris trois tweets comme si tu Ã©tais ${user.displayName}. Un truc fun et en franÃ§ais stp.
    Une fois que tu as les tweets, range les dans un tableau d'objets JavaScript avec comme clÃ© d'objet "text".
    Je vais me servir de ce tableau par la suite alors veille bien Ã  ce qu'il soit bien formattÃ©.
    RÃ©ponds uniquement en m'envoyant le tableau bien formattÃ© stp.`;

    const posts = await chat(prompt);
    setPosts(JSON.parse(posts.data));
  }

  async function getBio(user: User) {
    const prompt = `Ã‰cris une bio twitter comme si tu Ã©tais ${user.displayName}. Un truc trÃ¨s fun, 80 caractÃ¨res maximum et en franÃ§ais stp.`;
    const bio = await chat(prompt);

    setUser({
      ...user,
      bio: bio.data,
    });
  }

  useEffect(() => {
    if (!user) return;

    getBio(user);
    getPosts(user);
  }, [user?.id]);

  const character = useCharacter(userId.toString());

  function initUser(character: MarvelCharacter) {
    character.description = ""; // ðŸ¥¶ðŸ¥¶ðŸ¥¶

    const characterToUser = formatMarvelCharacterToUser(character);
    setUser(characterToUser);
  }

  useEffect(() => {
    if (!character) return;

    initUser(character);
  }, [character]);

  if (!user) return null;

  return (
    <div className="min-h-screen flex flex-col items-center py-12">
      <div className="mb-16">
        <ProfileCard {...formatProfileCard(user)} />
      </div>

      {!posts && (
        <div className="text-white text-lg">Loading funny content ðŸ‘¾</div>
      )}

      <ul className="space-y-6">
        {posts?.map((post, i) => (
          <li key={i}>
            <PostCard {...formatPostCard(user, post)} />
          </li>
        ))}
      </ul>
    </div>
  );
}

export default Page;
